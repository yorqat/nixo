(deflisten music_meta "scripts/music_info --listen_meta")
(deflisten music_playing_meta "scripts/music_info --listen_playing_meta")

;;; for summoning the music player
(defwindow mp-mini
  :monitor 0
  :stacking "fg"
  :tooltip "music widget"
  ; :exclusive true
  :geometry (geometry
    :x "0%"
    :y "0%"
    :height "2px"
    :width "400px"
    :anchor "top center")
  (eventbox :class "colored-prim rounded"
    :onhover "eww -c . open mp; eww -c . close mp-mini;"))
    
(defwindow mp
  :class ""
  :monitor 0
  :stacking "fg"
  :tooltip "music widget"
  :geometry (geometry 
    :x "0%"
    :y "0%"
    :height "30px"
    :width "500px"
    :anchor "top center")
(music))

(defwidget music []
  (eventbox :onhoverlost "eww -c . close mp; eww -c . open mp-mini"
    (box :class "music colored-prim"
      :orientation "v"
      (box :orientation "h"
        (box :class "music-heading"
          :orientation "h"
          ; music thumbnail
          (box :class "music-art" :halign "start"
            (image :path {music_meta.cover} :image-width 225 :image-height 225))
          ; music descriptors
          (box :class "music-meta"
            :orientation "v"

            ; artist and title
            (label :text {music_meta.artist})
            (label :class "music-player-label" :text {music_meta.title})

            ; music seeking
            (box :class "h" :orientation "v" :class "music-progress" :valign "end" 
              (label :class "music-progress-time" :text {music_playing_meta.time})
              (scale :orientation "h" :halign "center"
                :value {music_playing_meta.percentile}
                :marks "hi"
                :max 100.0
                :min 0.0
                :onchange "mpc seek {}%"
                :class "music-slider"))

            ; music buttons
            (box :orientation "h" :space-evenly true
              (button :class "music-button" :onclick "mpc repeat" "󰑖")
              (button :class "music-button" :onclick "mpc prev" "󰒮")
              (button :class "music-button" :onclick "mpc toggle" { music_playing_meta.playing ? "󰐊": "" })
              (button :class "music-button" :onclick "mpc next" "󰼧")
              (button :class "music-button" :onclick "mpc random" "󰒟"))))))))